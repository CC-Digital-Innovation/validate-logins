apiVersion: batch/v1
kind: Job
metadata:
  name: validate-logins
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      initContainers:
      - image: busybox:1.34
        name: init-ssh-servers
        command: 
          - sh
          - -c
          - >-
            until (( nslookup -type=a ssh-server-1.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local && nslookup -type=a ssh-server-2.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local )); do
                echo Waiting for ssh-server-1 and ssh-server-2...;
                sleep 2; 
            done
      containers:
      - image: validate-login:dev
        imagePullPolicy: Never
        name: validate-logins
      restartPolicy: Never
  backoffLimit: 3
---
# SSH Server 1 for testing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-server-1
spec:
  selector:
    matchLabels:
      app: ssh-server-1
  template:
    metadata:
      labels:
        app: ssh-server-1
    spec:
      containers:
      - name: ssh-server-1
        image: lscr.io/linuxserver/openssh-server
        env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: PASSWORD_ACCESS
            value: "true"
          - name: USER_PASSWORD
            value: OyRy05v^3&Mc
          - name: USER_NAME
            value: admin
        resources:
          limits:
            memory: 128Mi
            cpu: 500m
        ports:
        - containerPort: 2222
  revisionHistoryLimit: 0
---
# SSH Server 1 service
apiVersion: v1
kind: Service
metadata:
  name: ssh-server-1
spec:
  selector:
    app: ssh-server-1
  ports:
  - name: ssh-1
    port: 22
    targetPort: 2222
---
# SSH Server 2 for testing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-server-2
spec:
  selector:
    matchLabels:
      app: ssh-server-2
  template:
    metadata:
      labels:
        app: ssh-server-2
    spec:
      containers:
      - name: ssh-server-2
        image: lscr.io/linuxserver/openssh-server
        env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: PASSWORD_ACCESS
            value: "true"
          - name: USER_PASSWORD
            value: ^Dz3Tf8Jk*Dy
          - name: USER_NAME
            value: admin
        resources:
          limits:
            memory: 128Mi
            cpu: 500m
        ports:
        - containerPort: 2222
  revisionHistoryLimit: 0
---
# SSH Server 2 service
apiVersion: v1
kind: Service
metadata:
  name: ssh-server-2
spec:
  selector:
    app: ssh-server-2
  ports:
  - name: ssh-2
    port: 2222
---
# Email API to send report
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: email-api
  name: email-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: email-api
  template:
    metadata:
      labels:
        io.kompose.service: email-api
    spec:
      containers:
        - image: email-api:dev
          imagePullPolicy: Never
          name: email-api
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
      restartPolicy: Always
  revisionHistoryLimit: 0
---
# Email API service
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: email-api
  name: email-api
spec:
  ports:
    - name: "http"
      port: 80
  selector:
    io.kompose.service: email-api
